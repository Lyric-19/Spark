Conda uses environments to load different sets of Python packages
type conda env list to see the environments availible.
Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
22/05/12 12:31:33 INFO SparkContext: Running Spark version 3.2.1
22/05/12 12:31:33 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
22/05/12 12:31:33 WARN SparkConf: Note that spark.local.dir will be overridden by the value set by the cluster manager (via SPARK_LOCAL_DIRS in mesos/standalone/kubernetes and LOCAL_DIRS in YARN).
22/05/12 12:31:33 INFO ResourceUtils: ==============================================================
22/05/12 12:31:33 INFO ResourceUtils: No custom resources configured for spark.driver.
22/05/12 12:31:33 INFO ResourceUtils: ==============================================================
22/05/12 12:31:33 INFO SparkContext: Submitted application: Q2_code
22/05/12 12:31:33 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
22/05/12 12:31:33 INFO ResourceProfile: Limiting resource is cpu
22/05/12 12:31:33 INFO ResourceProfileManager: Added ResourceProfile id: 0
22/05/12 12:31:34 INFO SecurityManager: Changing view acls to: acq21rl
22/05/12 12:31:34 INFO SecurityManager: Changing modify acls to: acq21rl
22/05/12 12:31:34 INFO SecurityManager: Changing view acls groups to: 
22/05/12 12:31:34 INFO SecurityManager: Changing modify acls groups to: 
22/05/12 12:31:34 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(acq21rl); groups with view permissions: Set(); users  with modify permissions: Set(acq21rl); groups with modify permissions: Set()
22/05/12 12:31:34 INFO Utils: Successfully started service 'sparkDriver' on port 43169.
22/05/12 12:31:34 INFO SparkEnv: Registering MapOutputTracker
22/05/12 12:31:34 INFO SparkEnv: Registering BlockManagerMaster
22/05/12 12:31:34 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
22/05/12 12:31:34 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
22/05/12 12:31:34 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
22/05/12 12:31:34 INFO DiskBlockManager: Created local directory at /mnt/fastdata/acq21rl/blockmgr-e81d9e53-832b-49bf-b7eb-d872fda6cc33
22/05/12 12:31:34 INFO MemoryStore: MemoryStore started with capacity 15.8 GiB
22/05/12 12:31:34 INFO SparkEnv: Registering OutputCommitCoordinator
22/05/12 12:31:35 INFO Utils: Successfully started service 'SparkUI' on port 4040.
22/05/12 12:31:35 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://sharc-node173.shef.ac.uk:4040
22/05/12 12:31:35 INFO Executor: Starting executor ID driver on host sharc-node173.shef.ac.uk
22/05/12 12:31:35 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 36300.
22/05/12 12:31:35 INFO NettyBlockTransferService: Server created on sharc-node173.shef.ac.uk:36300
22/05/12 12:31:35 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
22/05/12 12:31:35 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, sharc-node173.shef.ac.uk, 36300, None)
22/05/12 12:31:35 INFO BlockManagerMasterEndpoint: Registering block manager sharc-node173.shef.ac.uk:36300 with 15.8 GiB RAM, BlockManagerId(driver, sharc-node173.shef.ac.uk, 36300, None)
22/05/12 12:31:35 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, sharc-node173.shef.ac.uk, 36300, None)
22/05/12 12:31:35 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, sharc-node173.shef.ac.uk, 36300, None)
/home/acq21rl/.conda/envs/myspark/lib/python3.6/site-packages/pyspark/python/lib/pyspark.zip/pyspark/context.py:238: FutureWarning: Python 3.6 support is deprecated in Spark 3.2.
  FutureWarning
22/05/12 12:31:36 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
22/05/12 12:31:36 INFO SharedState: Warehouse path is 'file:/home/acq21rl/com6012/ScalableML/HPC/spark-warehouse'.
+------+-------+------+----------+
|userId|movieId|rating|timestamp |
+------+-------+------+----------+
|1     |296    |5.0   |1147880044|
|1     |306    |3.5   |1147868817|
|1     |307    |5.0   |1147868828|
|1     |665    |5.0   |1147878820|
|1     |899    |3.5   |1147868510|
|1     |1088   |4.0   |1147868495|
|1     |1175   |3.5   |1147868826|
|1     |1217   |3.5   |1147878326|
|1     |1237   |5.0   |1147868839|
|1     |1250   |4.0   |1147868414|
+------+-------+------+----------+
only showing top 10 rows

22/05/12 12:33:29 WARN InstanceBuilder$NativeBLAS: Failed to load implementation from:dev.ludovic.netlib.blas.JNIBLAS
22/05/12 12:33:29 WARN InstanceBuilder$NativeBLAS: Failed to load implementation from:dev.ludovic.netlib.blas.ForeignLinkerBLAS
22/05/12 12:33:29 WARN InstanceBuilder$NativeLAPACK: Failed to load implementation from:dev.ludovic.netlib.lapack.JNILAPACK
No.0 HotUsers Root-mean-square error = 0.7932428405426131
No.0 CoolUsers Root-mean-square error = 1.0595141553735858
No.0 HotUsers Root-mean-square error = 0.7901611788409635
No.0 CoolUsers Root-mean-square error = 1.0541226678683187
No.1 HotUsers Root-mean-square error = 0.7926739688193153
No.1 CoolUsers Root-mean-square error = 1.0583339606239681
No.1 HotUsers Root-mean-square error = 0.7906327931928613
No.1 CoolUsers Root-mean-square error = 1.0503487593829965
No.2 HotUsers Root-mean-square error = 0.7929003387920126
No.2 CoolUsers Root-mean-square error = 1.055921081543357
No.2 HotUsers Root-mean-square error = 0.7895960313084119
No.2 CoolUsers Root-mean-square error = 1.0455081860738302
No.3 HotUsers Root-mean-square error = 0.7921579637616748
No.3 CoolUsers Root-mean-square error = 1.0540592489450873
No.3 HotUsers Root-mean-square error = 0.7882447558395436
No.3 CoolUsers Root-mean-square error = 1.0512413146135096
No.4 HotUsers Root-mean-square error = 0.7924695042584101
No.4 CoolUsers Root-mean-square error = 1.0548811580267723
No.4 HotUsers Root-mean-square error = 0.7878490159204102
No.4 CoolUsers Root-mean-square error = 1.0486058028763954
********* show the table of tags **************
+------+-------+-----------------------+----------+
|userId|movieId|tag                    |timestamp |
+------+-------+-----------------------+----------+
|3     |260    |classic                |1439472355|
|3     |260    |sci-fi                 |1439472256|
|4     |1732   |dark comedy            |1573943598|
|4     |1732   |great dialogue         |1573943604|
|4     |7569   |so bad it's good       |1573943455|
|4     |44665  |unreliable narrators   |1573943619|
|4     |115569 |tense                  |1573943077|
|4     |115713 |artificial intelligence|1573942979|
|4     |115713 |philosophical          |1573943033|
|4     |115713 |tense                  |1573943042|
+------+-------+-----------------------+----------+
only showing top 10 rows

/home/acq21rl/.conda/envs/myspark/lib/python3.6/site-packages/pyspark/python/lib/pyspark.zip/pyspark/sql/context.py:127: FutureWarning: Deprecated in 3.0.0. Use SparkSession.builder.getOrCreate() instead.
the largest class in this split is No. 4
the second large class in this split is No. 0
the top tag in the largest class is  action
the bottom tag in the largest class is  PG-13:intense sequences of violence
the top tag in the second large class is  twist ending
the bottom tag in the second large class is  PG-13:intense sequences of violence
the largest class in this split is No. 9
the second large class in this split is No. 0
the top tag in the largest class is  sci-fi
the bottom tag in the largest class is  i knew the ending
the top tag in the second large class is  BD-R
the bottom tag in the second large class is  sandow
the largest class in this split is No. 3
the second large class in this split is No. 8
the top tag in the largest class is  comedy
the bottom tag in the largest class is  rock'n'roll
the top tag in the second large class is  sci-fi
the bottom tag in the second large class is  i knew the ending
the largest class in this split is No. 6
the second large class in this split is No. 5
the top tag in the largest class is  sci-fi
the bottom tag in the largest class is  i knew the ending
the top tag in the second large class is  Criterion
the bottom tag in the second large class is  rock'n'roll
the largest class in this split is No. 0
the second large class in this split is No. 4
the top tag in the largest class is  sci-fi
the bottom tag in the largest class is  discimination
the top tag in the second large class is  based on a book
the bottom tag in the second large class is  Chinese culture
********* the table of top tag and bottom tag in 5 splits ***********
+--------------------+-----------------+-----------------+-----------------+---------------+
|             split_1|          split_2|          split_3|          split_4|        split_5|
+--------------------+-----------------+-----------------+-----------------+---------------+
|              action|           sci-fi|           comedy|           sci-fi|         sci-fi|
|PG-13:intense seq...|i knew the ending|      rock'n'roll|i knew the ending|  discimination|
|        twist ending|             BD-R|           sci-fi|        Criterion|based on a book|
|PG-13:intense seq...|           sandow|i knew the ending|      rock'n'roll|Chinese culture|
+--------------------+-----------------+-----------------+-----------------+---------------+

